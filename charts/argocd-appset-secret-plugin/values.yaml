# Default values for appset-env-generator-plugin.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- number of replica pods to create
replicaCount: 1

image:
  # -- image repo to use for the docker container
  repository: jessebot/argocd-appset-secret-plugin
  # -- image pullPolicy for the main container
  pullPolicy: IfNotPresent
  # -- Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
# -- override the autogenerated name of this helm chart release
nameOverride: ""
fullnameOverride: ""

secretVars:
  existingSecret:
    # -- the name of an existing secret to use for the secret keys to provide to ApplicationSets via the plugin generator
    # defaults to "%s-secret-vars" where %s is argocd-appset-secret-plugin.fullname which is the name of the 
    # release or whatever you specified for fullnameOverride
    name: ""
    # -- key in secretVars.existingSecret to use for IN-LINE yaml secret values, this key should be 
    # the name of the file you want to create in the argocd-appset-secret-plugin container
    key: "secret_vars.yaml"

token:
  # -- the name of an existing secret to use for the token that argoCD and the plugin will use for communication
  existingSecret: ""

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use. If not set and create is true,
  # a name is generated using the fullname template
  name: ""

# -- any additional annotations you'd like the pod to have
podAnnotations: {}

# -- securityContext for the pod: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
podSecurityContext: {}
  # fsGroup: 2000

# -- securityContext for the container: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  # -- type for the service, only ClusterIP is tested
  type: ClusterIP
  # -- service port to expose on the cluster
  port: 80
  # -- service target port on the container
  targetPort: 4355

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  # -- if you're feeling brave, why not try enabling autoscaling? untested
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# -- deploy chart to a specific k8s node
nodeSelector: {}

tolerations: []

affinity: {}
